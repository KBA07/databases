############################################################################
# Global options
############################################################################
# large history
set-option -g history-limit 10000

# Because delays are stupid
set -sg escape-time 0

# colors
#set-window-option -g mode-bg magenta
#set -g window-option bg=magenta
set -g mode-style bg=magenta
set-option -g default-terminal "screen-256color"
#set-option -g pane-active-border-fg green

# basic settings
set-window-option -g xterm-keys on
set-window-option -g mode-keys vi

#set-window-option -g monitor-activity on
#set-window-option -g window-status-current-fg white
#set-window-option -g window-status-current-attr reverse

# Enable the mouse
set-window-option -g mouse on
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Change bind key from Ctrl+b to Ctrl+a
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# Toggle mouse on
bind m \
    set -g mouse on \;\
    display 'Mouse: ON'

# Toggle mouse off
bind M \
    set -g mouse off \;\
    display 'Mouse: OFF'

############################################################################
# Status Bar
############################################################################
# Stop auto renaming the window title.
set-option -g allow-rename off

set-option -g status-justify centre

#set -g status-interval 5
#set -g status-left "#[fg=magenta]» #[fg=green,bold]#(echo $USER)#[fg=red,bold] @ #[fg=blue,bold]#(echo $HOSTNAME)#[fg=cyan] » #[fg=magenta,bg=black]#(tmux-mem-cpu-load --graph-lines 10 --interval 5) #[default]"
#set -g status-left-length 100
set -g status-right "#[fg=red]#S #I:#P - #[fg=green]%I:%M #[fg=yellow]"

set-option -g visual-activity on
# Titles (window number, program name, active (or not)
set-option -g set-titles on
set-option -g set-titles-string '#H:#S.#I.#P #T'


###########################################################################
# Colours
###########################################################################
 # color status bar
set -g status-bg black
set -g status-fg cyan

 # highlight current window
#set-window-option -g window-status-current-fg green
#set-window-option -g window-status-current-bg black

 # set color of active pane
#set -g pane-border-fg magenta
#set -g pane-border-bg black
#set -g pane-active-border-fg cyan
#set -g pane-active-border-bg black

############################################################################
# Unbindings
############################################################################
unbind j
unbind Up
unbind Down
unbind Left
unbind Right
unbind [
unbind ]
unbind p
unbind n
unbind b

############################################################################
# Clipboard
############################################################################
# Vim bindings for copy & pasting
bind-key -T edit-mode-vi Up send-keys -X history-up
bind-key -T edit-mode-vi Down send-keys -X history-down
unbind-key -T copy-mode-vi Space     ;   bind-key -T copy-mode-vi v send-keys -X begin-selection
unbind-key -T copy-mode-vi Enter     ;   bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
unbind-key -T copy-mode-vi C-v       ;   bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
unbind-key -T copy-mode-vi [         ;   bind-key -T copy-mode-vi [ send-keys -X begin-selection
unbind-key -T copy-mode-vi ]         ;   bind-key -T copy-mode-vi ] send-keys -X copy-selection

# paste buffer
bind-key p paste-buffer

# copy mode
bind-key b copy-mode

############################################################################
# windows
############################################################################
#set-window-option -g window-status-current-bg red
bind C-h previous-window
bind C-l next-window
bind A command-prompt "rename-window %%"

bind -n S-Left  previous-window
bind -n S-Right next-window

# By default, all windows in a session are constrained to the size of the
# smallest client connected to that session,
# even if both clients are looking at different windows.
# It seems that in this particular case, Screen has the better default
# where a window is only constrained in size if a smaller client
# is actively looking at it.
setw -g aggressive-resize on

############################################################################
# panes
############################################################################
# new split in current pane (horizontal / vertical)
#bind-key | split-window -v # split pane horizontally
#bind-key \ split-window -h # split pane vertically

bind-key \\ split-window -h -c '#{pane_current_path}' 
bind-key \| split-window -v -c '#{pane_current_path}'


bind-key Enter command-prompt "joinp -t:%%" # %% = prompt for window.pane [-V|H] # vert|hor split

unbind Up
unbind Down
unbind Left
unbind Right

bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

#previous pane
bind-key -n C-up prev
bind-key -n C-left prev

#next pane
bind-key -n C-right next
bind-key -n C-down next

############################################################################
# layouts
############################################################################
bind o select-layout "active-only"
bind M-- select-layout "even-vertical"
bind M-| select-layout "even-horizontal"
bind M-r rotate-window

